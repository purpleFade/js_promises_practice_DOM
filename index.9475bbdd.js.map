{"mappings":"ACGA,IAAM,EAAO,SAAS,aAAa,CAAC,QAE9B,EAAiB,SAAC,CAAxB,EACE,IAAM,EAAa,SAAS,aAAa,CAAC,MAE1C,CAAA,EAAW,SAAS,CAAG,UACvB,EAAW,OAAO,CAAC,EAAE,CAAG,eACxB,EAAW,WAAW,CAAG,EACzB,EAAK,MAAM,CAAC,EACd,EAWM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAI,EAAa,CAAA,EAEjB,EAAK,gBAAgB,CAAC,QAAS,WAC7B,EAAa,CAAA,EACb,EAAQ,6BACV,GAEA,WAAW,WACJ,GACH,EAAO,6BAEX,EAAG,IACL,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA5C,EACE,EAAK,gBAAgB,CAAC,QAAS,WAC7B,EAAQ,8BACV,GAEA,EAAK,gBAAgB,CAAC,cAAe,WACnC,EAAQ,8BACV,EACF,GAEM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAI,EAAe,CAAA,EACf,EAAc,CAAA,EAEZ,EAAkB,WAClB,GAAe,GACjB,EAAQ,6BAEZ,EAEA,EAAK,gBAAgB,CAAC,cAAe,WACnC,EAAe,CAAA,EACf,GACF,GAEA,EAAK,gBAAgB,CAAC,QAAS,WAC7B,EAAc,CAAA,EACd,GACF,EACF,GAEA,EAAa,IAAI,CAAC,EAvDG,SAAC,CAAtB,EACE,IAAM,EAAW,SAAS,aAAa,CAAC,MAExC,CAAA,EAAS,SAAS,CAAG,UACrB,EAAS,OAAO,CAAC,EAAE,CAAG,eACtB,EAAS,WAAW,CAAG,EACvB,EAAK,MAAM,CAAC,EACd,GAiDA,EAAc,IAAI,CAAC,GACnB,EAAa,IAAI,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable prefer-promise-reject-errors */ \"use strict\";\nvar body = document.querySelector(\"body\");\nvar successHandler = function(message) {\n    var successDiv = document.createElement(\"div\");\n    successDiv.className = \"success\";\n    successDiv.dataset.qa = \"notification\";\n    successDiv.textContent = message;\n    body.append(successDiv);\n};\nvar errorHandler = function(message) {\n    var errorDiv = document.createElement(\"div\");\n    errorDiv.className = \"warning\";\n    errorDiv.dataset.qa = \"notification\";\n    errorDiv.textContent = message;\n    body.append(errorDiv);\n};\nvar firstPromise = new Promise(function(resolve, reject) {\n    var isResolved = false;\n    body.addEventListener(\"click\", function() {\n        isResolved = true;\n        resolve(\"First promise was resolved\");\n    });\n    setTimeout(function() {\n        if (!isResolved) reject(\"First promise was rejected\");\n    }, 3000);\n});\nvar secondPromise = new Promise(function(resolve, reject) {\n    body.addEventListener(\"click\", function() {\n        resolve(\"Second promise was resolved\");\n    });\n    body.addEventListener(\"contextmenu\", function() {\n        resolve(\"Second promise was resolved\");\n    });\n});\nvar thirdPromise = new Promise(function(resolve, reject) {\n    var isRightClick = false;\n    var isLeftClick = false;\n    var checkBothClicks = function() {\n        if (isLeftClick && isRightClick) resolve(\"Third promise was resolved\");\n    };\n    body.addEventListener(\"contextmenu\", function() {\n        isRightClick = true;\n        checkBothClicks();\n    });\n    body.addEventListener(\"click\", function() {\n        isLeftClick = true;\n        checkBothClicks();\n    });\n});\nfirstPromise.then(successHandler, errorHandler);\nsecondPromise.then(successHandler);\nthirdPromise.then(successHandler);\n\n//# sourceMappingURL=index.9475bbdd.js.map\n","/* eslint-disable prefer-promise-reject-errors */\n'use strict';\n\nconst body = document.querySelector('body');\n\nconst successHandler = (message) => {\n  const successDiv = document.createElement('div');\n\n  successDiv.className = 'success';\n  successDiv.dataset.qa = 'notification';\n  successDiv.textContent = message;\n  body.append(successDiv);\n};\n\nconst errorHandler = (message) => {\n  const errorDiv = document.createElement('div');\n\n  errorDiv.className = 'warning';\n  errorDiv.dataset.qa = 'notification';\n  errorDiv.textContent = message;\n  body.append(errorDiv);\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  let isResolved = false;\n\n  body.addEventListener('click', () => {\n    isResolved = true;\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    if (!isResolved) {\n      reject('First promise was rejected');\n    }\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve, reject) => {\n  body.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  body.addEventListener('contextmenu', () => {\n    resolve('Second promise was resolved');\n  });\n});\n\nconst thirdPromise = new Promise((resolve, reject) => {\n  let isRightClick = false;\n  let isLeftClick = false;\n\n  const checkBothClicks = () => {\n    if (isLeftClick && isRightClick) {\n      resolve('Third promise was resolved');\n    }\n  };\n\n  body.addEventListener('contextmenu', () => {\n    isRightClick = true;\n    checkBothClicks();\n  });\n\n  body.addEventListener('click', () => {\n    isLeftClick = true;\n    checkBothClicks();\n  });\n});\n\nfirstPromise.then(successHandler, errorHandler);\nsecondPromise.then(successHandler);\nthirdPromise.then(successHandler);\n"],"names":["body","document","querySelector","successHandler","message","successDiv","createElement","className","dataset","qa","textContent","append","firstPromise","Promise","resolve","reject","isResolved","addEventListener","setTimeout","secondPromise","thirdPromise","isRightClick","isLeftClick","checkBothClicks","then","errorDiv"],"version":3,"file":"index.9475bbdd.js.map"}